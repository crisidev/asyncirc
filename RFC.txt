Network Working Group                                      John Andersen
Request for Comments:                          Portland State University
Category: CS 494 Project                                        May 2018


                    Handler Header Payload Protocol

Status of this memo

   This document specifies an Internet standards track protocol for the
   Internet community, and requests discussion and suggestions for
   improvements.  Please refer to the current edition of the "Internet
   Official Protocol Standards" (STD 1) for the standardization state
   and status of this protocol.  Distribution of this memo is unlimited.

Abstract

   The Handler Header Payload Protocol (H2P2) provides a framework
   for passing message content between hosts on a TCP/IP network.
   H2P2 is a simple message format which packs the lengths of the
   message handler, header, and payload in front of the joined three.
   In addition to the message format H2P2 the specification provides
   implementation details for a set of handlers all H2P2 compliant
   libraries and services must implement.

Table of Contents

   1.  Introduction. . . . . . . . . . . . . . . . . . . . . . . . . .
   1.1 Requirements. . . . . . . . . . . . . . . . . . . . . . . . . .
   1.2 Terminology . . . . . . . . . . . . . . . . . . . . . . . . . .
   1.3 Design goals. . . . . . . . . . . . . . . . . . . . . . . . . .
   2.  Protocol Summary. . . . . . . . . . . . . . . . . . . . . . . .
   3.  Service Interaction.. . . . . . . . . . . . . . . . . . . . . .
List of Figures
   1. Format of a H2P2 message . . . . . . . . . . . . . . . . . . . .
List of Tables
   1. Description of fields in a H2P2 message. . . . . . . . . . . . .
   2. H2P2 messages. . . . . . . . . . . . . . . . . . . . . . . . . .

1. Introduction

   The Handler Header Payload Protocol (H2P2) provides a simple way to transfer
   arbitrary data. A message contains length information of the handler, header,
   and payload fields in bytes as well as their content.

   H2P2 is designed to be flexible in that it is a message format which can be
   transmitted over TCP and UDP layers or application layer protocols. Parsing
   and handling of messages can be implemented at any level in the network
   stack.

   The primary function of H2P2 is the handler. The handler is a string which
   allows services sending and receiving messages to look up what routine should
   service the incoming message. This allows H2P2 services to drop or forward
   messages they do not know how to handle. While at the same time making the
   protocol extensible in that not all services MUST implement all handlers.
   However, all services MUST implement the handlers described in this
   specification to allow for basic communication and routing.

1.1 Requirements

   Throughout this document, the words that are used to define the
   significance of particular requirements are capitalized.  These words
   are:

      o "MUST"

        This word or the adjective "REQUIRED" means that the
        item is an absolute requirement of this specification.

      o "MUST NOT"

        This phrase means that the item is an absolute prohibition
        of this specification.

      o "SHOULD"

        This word or the adjective "RECOMMENDED" means that there
        may exist valid reasons in particular circumstances to ignore
        this item, but the full implications should be understood and
        the case carefully weighed before choosing a different course.

      o "SHOULD NOT"

        This phrase means that there may exist valid reasons in
        particular circumstances when the listed behavior is acceptable
        or even useful, but the full implications should be understood
        and the case carefully weighed before implementing any behavior
        described with this label.

      o "MAY"

        This word or the adjective "OPTIONAL" means that this item is
        truly optional.  One vendor may choose to include the item
        because a particular marketplace requires it or because it
        enhances the product, for example; another vendor may omit the
        same item.

1.2 Terminology

   This document uses the following terms:

      o "H2P2 client"

      A H2P2 client is an Internet host using H2P2 to communicate with
      other hosts.

      o "H2P2 server"

      A H2P2 server is an Internet host which MUST implement the
      functionality described in this specification.

      o "H2P2 room"

      A H2P2 room is collection of H2P2 clients who wish to send and
      receive messages to the group rather than individually.

1.3 Design goals

   The following list gives general design goals for H2P2.

      o H2P2 message format should be simple to implement in any
        language. It should be easy to parse and forward messages.
        Thus avoiding parsing vulnerabilities found in many other
        protocols.

      o Extensibility by way of the handler, header, payload scheme.
        Handlers described in this specification MUST be implemented by
        H2P2 servers. Any service wishing to use H2P2 MAY then implement
        their desisred handlers to process respective header and payload
        data.

      o Communication between all H2P2 clients connected to an H2P2
        server. Either individually between one another, or to clients
        in a H2P2 room.

2. Protocol Summary

   The H2P2 protocol consists of the handler, header, payload variable length
   byte fields. Prepended with their lengths packed into 8 bytes each, network
   byte order (big-endian). The message format can be seen in Figure 1 and
   Table 1.

    0                   1                   2                   3
    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |                                                               |
   |                       handler length (8)                      |
   +---------------------------------------------------------------+
   |                                                               |
   |                       header length (8)                       |
   +---------------------------------------------------------------+
   |                                                               |
   |                       payload length (8)                      |
   +---------------------------------------------------------------+
   |                                                               |
   |                       handler (variable)                      |
   |                                                               |
   +---------------------------------------------------------------+
   |                                                               |
   |                       header  (variable)                      |
   |                                                               |
   +---------------------------------------------------------------+
   |                                                               |
   |                       payload (variable)                      |
   |                                                               |
   +---------------------------------------------------------------+

                  Figure 1:  Format of a H2P2 message

   H2P2 length fields should be interpreted as unsigned integers. Header and
   payload fields are interpreted in handler specific ways. Handler contains a
   UTF-8 encoded string. When not otherwise specified headers and payload bytes
   should also be decoded using the UTF-8 specification.

   FIELD              BYTES    DESCRIPTION
   -----              -----    -----------

   handler_length       8      Length of handler string in bytes
   header_length        8      Length of header string in bytes
   payload_length       8      Length of payload string in bytes
   handler             var     Handler field of handler_length bytes
   header              var     Header field of header_length bytes
   payload             var     Payload field of payload_length bytes

           Table 1:  Description of fields in a H2P2 message

3 Service interaction

   Table 2 summarises messages and responses to and from H2P2 services.
   Unless otherwise specified data is transmitted in the payload of the
   message.

   Handler         Use
   -------         ---

   echo         -  Server repeats payload back to client.

   not_found    -  Handler not found.

   terminate    -  Sent to terminate connection with the other H2P2 service.

   identify     -  Client requests to be identifiable to other clients
                   on H2P2 server by the name provided in the payload.

   identified   -  Server acknowledges identify sent by client.

   id_taken     -  Anther client is already registered with the client
                   specified identify payload.

   req_id       -  Server requires the client issue an identify before
                   requesting the specified operation.

   list_rooms   -  Client requests list of rooms from the server.

   room_list    -  Server sends newline seperated list of rooms to client.

   create_room  -  Client provides the name of the room it wishes to create in
                   the payload. Server should allocate a room by the given name.

   room_created -  Server acknowledges create_room sent by client.

   join_room    -  Client provides the name of the room it wishes to join in
                   the payload. Server should associate the client with that
                   room.

   room_joined  -  Server acknowledges create_room sent by client.

   msg_room     -  Client provides the name of the room it wishes to send a
                   message to in the header. The payload contains the message to
                   be broadcast to all clients associated with that room.

   broadcast    -  Server sends to each client in a room the name of the room
                   being broadcast to in the header. Payload contains the
                   message content of the broadcast.

   room_msgd    -  Server acknowledges msg_room sent by client.

   room_members -  Client requests list of room members from the server.

   member_list  -  Server sends newline seperated list of room members to
                   client.

   no_room      -  Server sends this in response to a msg_room where no client
                   has issued a create_room with the name given in the msg_room
                   header.

   leave_room   -  Client provides the name of the room it wishes to leave in
                   message to Server in the payload.

   room_left    -  Server acknowledges leave_room sent by client.

   msg_client   -  Client provides the name of the client it wishes to send a
                   message to in the header. The payload contains the message to
                   relay to the client identified header information.

   client_msg   -  Server provides the name of the client who sent the message
                   in the header. The payload contains the message data.

   client_msgd  -  Server acknowledges msg_client sent by client.

   no_client    -  Server sends this in response to a msg_client where no client
                   has issued an identify with the name given in the msg_client
                   header.


                          Table 2:  H2P2 messages
